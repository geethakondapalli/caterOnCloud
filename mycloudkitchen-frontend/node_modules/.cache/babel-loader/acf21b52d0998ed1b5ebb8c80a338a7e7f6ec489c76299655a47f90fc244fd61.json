{"ast":null,"code":"import api from './api';\nexport const authService = {\n  // Test connection\n  testConnection: async () => {\n    try {\n      const response = await api.get('/health');\n      return response.data;\n    } catch (error) {\n      throw new Error('Cannot connect to backend server');\n    }\n  },\n  login: async (email, password) => {\n    const formData = new FormData();\n    formData.append('username', email);\n    formData.append('password', password);\n    const response = await api.post('/auth/login', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    const {\n      access_token\n    } = response.data;\n    localStorage.setItem('token', access_token);\n\n    // Get user profile\n    const userResponse = await api.get('/users/me');\n    localStorage.setItem('user', JSON.stringify(userResponse.data));\n    return userResponse.data;\n  },\n  register: async userData => {\n    const response = await api.post('/auth/register', userData);\n    return response.data;\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  },\n  getCurrentUser: () => {\n    const user = localStorage.getItem('user');\n    return user ? JSON.parse(user) : null;\n  },\n  updateProfile: async userData => {\n    const response = await api.put('/users/me', userData);\n    localStorage.setItem('user', JSON.stringify(response.data));\n    return response.data;\n  }\n};","map":{"version":3,"names":["api","authService","testConnection","response","get","data","error","Error","login","email","password","formData","FormData","append","post","headers","access_token","localStorage","setItem","userResponse","JSON","stringify","register","userData","logout","removeItem","getCurrentUser","user","getItem","parse","updateProfile","put"],"sources":["/Users/ashokdonepudi/Documents/CaterOnCloud/mycloudkitchen-frontend/src/services/auth.js"],"sourcesContent":["import api from './api';\n\nexport const authService = {\n     // Test connection\n  testConnection: async () => {\n    try {\n      const response = await api.get('/health');\n      return response.data;\n    } catch (error) {\n      throw new Error('Cannot connect to backend server');\n    }\n  },\n  \n  login: async (email, password) => {\n    const formData = new FormData();\n    formData.append('username', email);\n    formData.append('password', password);\n    \n    const response = await api.post('/auth/login', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    \n    const { access_token } = response.data;\n    localStorage.setItem('token', access_token);\n    \n    // Get user profile\n    const userResponse = await api.get('/users/me');\n    localStorage.setItem('user', JSON.stringify(userResponse.data));\n    \n    return userResponse.data;\n  },\n\n  register: async (userData) => {\n    const response = await api.post('/auth/register', userData);\n    return response.data;\n  },\n\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  },\n\n  getCurrentUser: () => {\n    const user = localStorage.getItem('user');\n    return user ? JSON.parse(user) : null;\n  },\n\n  updateProfile: async (userData) => {\n    const response = await api.put('/users/me', userData);\n    localStorage.setItem('user', JSON.stringify(response.data));\n    return response.data;\n  }\n};"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,OAAO,MAAMC,WAAW,GAAG;EACtB;EACHC,cAAc,EAAE,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,SAAS,CAAC;MACzC,OAAOD,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,kCAAkC,CAAC;IACrD;EACF,CAAC;EAEDC,KAAK,EAAE,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IAChC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEJ,KAAK,CAAC;IAClCE,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEH,QAAQ,CAAC;IAErC,MAAMP,QAAQ,GAAG,MAAMH,GAAG,CAACc,IAAI,CAAC,aAAa,EAAEH,QAAQ,EAAE;MACvDI,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEF,MAAM;MAAEC;IAAa,CAAC,GAAGb,QAAQ,CAACE,IAAI;IACtCY,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,YAAY,CAAC;;IAE3C;IACA,MAAMG,YAAY,GAAG,MAAMnB,GAAG,CAACI,GAAG,CAAC,WAAW,CAAC;IAC/Ca,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEE,IAAI,CAACC,SAAS,CAACF,YAAY,CAACd,IAAI,CAAC,CAAC;IAE/D,OAAOc,YAAY,CAACd,IAAI;EAC1B,CAAC;EAEDiB,QAAQ,EAAE,MAAOC,QAAQ,IAAK;IAC5B,MAAMpB,QAAQ,GAAG,MAAMH,GAAG,CAACc,IAAI,CAAC,gBAAgB,EAAES,QAAQ,CAAC;IAC3D,OAAOpB,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDmB,MAAM,EAAEA,CAAA,KAAM;IACZP,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;IAChCR,YAAY,CAACQ,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EAEDC,cAAc,EAAEA,CAAA,KAAM;IACpB,MAAMC,IAAI,GAAGV,YAAY,CAACW,OAAO,CAAC,MAAM,CAAC;IACzC,OAAOD,IAAI,GAAGP,IAAI,CAACS,KAAK,CAACF,IAAI,CAAC,GAAG,IAAI;EACvC,CAAC;EAEDG,aAAa,EAAE,MAAOP,QAAQ,IAAK;IACjC,MAAMpB,QAAQ,GAAG,MAAMH,GAAG,CAAC+B,GAAG,CAAC,WAAW,EAAER,QAAQ,CAAC;IACrDN,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEE,IAAI,CAACC,SAAS,CAAClB,QAAQ,CAACE,IAAI,CAAC,CAAC;IAC3D,OAAOF,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}