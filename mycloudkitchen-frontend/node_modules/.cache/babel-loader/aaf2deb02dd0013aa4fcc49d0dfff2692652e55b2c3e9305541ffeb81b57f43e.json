{"ast":null,"code":"var _jsxFileName = \"/Users/ashokdonepudi/Documents/CaterOnCloud/mycloudkitchen-frontend/src/pages/MenuOrderForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Plus, Minus, ShoppingCart, Calendar, Clock, User, Phone, MapPin, CreditCard, Package, Utensils, AlertCircle, Loader } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MenuOrderForm = ({\n  menuId\n}) => {\n  _s();\n  // State for menu data\n  const [menuData, setMenuData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [cart, setCart] = useState([]);\n  const [customerInfo, setCustomerInfo] = useState({\n    name: '',\n    phone: '',\n    email: '',\n    address: '',\n    delivery_time: '',\n    special_instructions: ''\n  });\n  const [orderType, setOrderType] = useState('delivery');\n  const [showOrderSummary, setShowOrderSummary] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n\n  // Extract menu ID from URL if not provided as prop\n  const getMenuIdFromUrl = () => {\n    if (menuId) return menuId;\n\n    // Extract from current URL: /order/M20250617\n    const path = window.location.pathname;\n    const matches = path.match(/\\/order\\/(.+)$/);\n    return matches ? matches[1] : null;\n  };\n\n  // Fetch menu data from API\n  const fetchMenuData = async id => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // API call to fetch scheduled menu by ID\n      const response = await fetch(`/api/scheduled-menus/${id}`);\n      if (!response.ok) {\n        throw new Error(`Menu not found (${response.status})`);\n      }\n      const data = await response.json();\n\n      // Transform the data to match expected structure\n      const transformedData = {\n        id: data.id || id,\n        name: data.menu_name || data.name,\n        menu_date: data.menu_date,\n        items: data.items || data.menu_items || []\n      };\n      setMenuData(transformedData);\n    } catch (err) {\n      console.error('Error fetching menu:', err);\n      setError(err.message || 'Failed to load menu');\n\n      // Fallback to mock data for demonstration\n      setMenuData({\n        id: id,\n        name: \"Saturday Special Menu\",\n        menu_date: \"2025-06-17\",\n        items: [{\n          catalog_item_id: 2008,\n          item_name: \"Combo3\",\n          description: \"Only Starters - Mixed appetizer platter with samosas, spring rolls, and chutney\",\n          price: \"18.0\",\n          category: \"Combo Deals\",\n          is_combo: true,\n          combo_items: [{\n            item_name: \"Samosa\",\n            quantity: 3\n          }, {\n            item_name: \"Spring Roll\",\n            quantity: 2\n          }, {\n            item_name: \"Mint Chutney\",\n            quantity: 1\n          }]\n        }, {\n          catalog_item_id: 2007,\n          item_name: \"Veg Combo\",\n          description: \"Starter and Biryani - Perfect vegetarian meal combo\",\n          price: \"12.0\",\n          category: \"Combo Deals\",\n          is_combo: true,\n          combo_items: [{\n            item_name: \"Veg Biryani\",\n            quantity: 1\n          }, {\n            item_name: \"Raita\",\n            quantity: 1\n          }, {\n            item_name: \"Papad\",\n            quantity: 2\n          }]\n        }, {\n          catalog_item_id: 2009,\n          item_name: \"Chicken Biryani\",\n          description: \"Aromatic basmati rice with tender chicken pieces\",\n          price: \"8.0\",\n          category: \"Main Courses\",\n          is_combo: false,\n          combo_items: null\n        }, {\n          catalog_item_id: 2010,\n          item_name: \"Paneer Butter Masala\",\n          description: \"Rich and creamy paneer curry with butter naan\",\n          price: \"7.5\",\n          category: \"Main Courses\",\n          is_combo: false,\n          combo_items: null\n        }, {\n          catalog_item_id: 2011,\n          item_name: \"Samosa\",\n          description: \"Crispy triangular pastry with spiced potato filling\",\n          price: \"2.5\",\n          category: \"Appetizers\",\n          is_combo: false,\n          combo_items: null\n        }]\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Load menu data on component mount\n  useEffect(() => {\n    const id = getMenuIdFromUrl();\n    if (id) {\n      fetchMenuData(id);\n    } else {\n      setError('Invalid menu ID');\n      setLoading(false);\n    }\n  }, [menuId]);\n\n  // Group items by category\n  const groupedItems = menuData ? menuData.items.reduce((groups, item) => {\n    const category = item.category || 'Other Items';\n    if (!groups[category]) {\n      groups[category] = [];\n    }\n    groups[category].push(item);\n    return groups;\n  }, {}) : {};\n  setSubmitting(true);\n  try {\n    const orderData = {\n      menu_id: menuData.id,\n      menu_name: menuData.name,\n      menu_date: menuData.menu_date,\n      customer: customerInfo,\n      order_type: orderType,\n      items: cart,\n      totals: {\n        subtotal: subtotal.toFixed(2),\n        delivery_fee: deliveryFee.toFixed(2),\n        tax: tax.toFixed(2),\n        total: total.toFixed(2)\n      },\n      order_time: new Date().toISOString()\n    };\n\n    // Submit order to API\n    const response = fetch('/api/orders', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(orderData)\n    });\n    if (response.ok) {\n      const result = response.json();\n      alert(`Order placed successfully! Order ID: ${result.order_id}`);\n      // Reset form\n      setCart([]);\n      setCustomerInfo({\n        name: '',\n        phone: '',\n        email: '',\n        address: '',\n        delivery_time: '',\n        special_instructions: ''\n      });\n    } else {\n      throw new Error('Failed to submit order');\n    }\n  } catch (error) {\n    console.error('Order submission error:', error);\n    alert('Failed to place order. Please try again.');\n  } finally {\n    setSubmitting(false);\n  }\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString('en-GB', {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  };\n\n  // Loading state\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-50 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(Loader, {\n          className: \"h-12 w-12 text-orange-600 mx-auto mb-4 animate-spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold text-gray-900 mb-2\",\n          children: \"Loading Menu...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: \"Please wait while we fetch the menu details.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }, this);\n  }\n\n  // Error state\n  if (error && !menuData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-50 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center max-w-md mx-auto p-6\",\n        children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n          className: \"h-16 w-16 text-red-500 mx-auto mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold text-gray-900 mb-2\",\n          children: \"Menu Not Available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 mb-4\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.location.reload(),\n          className: \"bg-orange-600 text-white px-4 py-2 rounded-lg hover:bg-orange-700\",\n          children: \"Try Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Check if menu is available for ordering (not past date)\n  const menuDate = new Date(menuData.menu_date);\n  const today = new Date();\n  const isMenuExpired = menuDate < today.setHours(0, 0, 0, 0);\n  if (isMenuExpired) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-50 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center max-w-md mx-auto p-6\",\n        children: [/*#__PURE__*/_jsxDEV(Calendar, {\n          className: \"h-16 w-16 text-gray-400 mx-auto mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold text-gray-900 mb-2\",\n          children: \"Menu No Longer Available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 mb-4\",\n          children: [\"This menu was for \", formatDate(menuData.menu_date), \" and is no longer available for ordering.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.history.back(),\n          className: \"bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700\",\n          children: \"Go Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Add item to cart\n  const addToCart = item => {\n    setCart(prevCart => {\n      const existingItem = prevCart.find(cartItem => cartItem.catalog_item_id === item.catalog_item_id);\n      if (existingItem) {\n        return prevCart.map(cartItem => cartItem.catalog_item_id === item.catalog_item_id ? {\n          ...cartItem,\n          quantity: cartItem.quantity + 1\n        } : cartItem);\n      } else {\n        return [...prevCart, {\n          ...item,\n          quantity: 1\n        }];\n      }\n    });\n  };\n\n  // Remove item from cart\n  const removeFromCart = itemId => {\n    setCart(prevCart => {\n      return prevCart.map(cartItem => cartItem.catalog_item_id === itemId ? {\n        ...cartItem,\n        quantity: Math.max(0, cartItem.quantity - 1)\n      } : cartItem).filter(cartItem => cartItem.quantity > 0);\n    });\n  };\n\n  // Get item quantity in cart\n  const getCartQuantity = itemId => {\n    const cartItem = cart.find(item => item.catalog_item_id === itemId);\n    return cartItem ? cartItem.quantity : 0;\n  };\n\n  // Calculate totals\n  const subtotal = cart.reduce((total, item) => total + parseFloat(item.price) * item.quantity, 0);\n  const deliveryFee = orderType === 'delivery' ? 2.50 : 0;\n  const tax = subtotal * 0.1; // 10% tax\n  const total = subtotal + deliveryFee + tax;\n\n  // Handle form submission\n  const handleSubmitOrder = async () => {\n    if (cart.length === 0) {\n      alert('Please add items to your cart before placing an order.');\n      return;\n    }\n    if (!customerInfo.name || !customerInfo.phone) {\n      alert('Please fill in required fields (Name and Phone).');\n      return;\n    }\n    if (orderType === 'delivery' && !customerInfo.address) {\n      alert('Please provide a delivery address.');\n      return;\n    }\n    const orderData = {\n      menu_name: menuData.name,\n      menu_date: menuData.menu_date,\n      customer: customerInfo,\n      order_type: orderType,\n      items: cart,\n      totals: {\n        subtotal: subtotal.toFixed(2),\n        delivery_fee: deliveryFee.toFixed(2),\n        tax: tax.toFixed(2),\n        total: total.toFixed(2)\n      }\n    };\n    console.log('Order submitted:', orderData);\n    alert('Order placed successfully!');\n  };\n};\n_s(MenuOrderForm, \"K0IF5Y6/CiCOuUXe8rG/gbopefs=\");\n_c = MenuOrderForm;\nexport default MenuOrderForm;\nvar _c;\n$RefreshReg$(_c, \"MenuOrderForm\");","map":{"version":3,"names":["React","useState","useEffect","Plus","Minus","ShoppingCart","Calendar","Clock","User","Phone","MapPin","CreditCard","Package","Utensils","AlertCircle","Loader","jsxDEV","_jsxDEV","MenuOrderForm","menuId","_s","menuData","setMenuData","loading","setLoading","error","setError","cart","setCart","customerInfo","setCustomerInfo","name","phone","email","address","delivery_time","special_instructions","orderType","setOrderType","showOrderSummary","setShowOrderSummary","submitting","setSubmitting","getMenuIdFromUrl","path","window","location","pathname","matches","match","fetchMenuData","id","response","fetch","ok","Error","status","data","json","transformedData","menu_name","menu_date","items","menu_items","err","console","message","catalog_item_id","item_name","description","price","category","is_combo","combo_items","quantity","groupedItems","reduce","groups","item","push","orderData","menu_id","customer","order_type","totals","subtotal","toFixed","delivery_fee","deliveryFee","tax","total","order_time","Date","toISOString","method","headers","body","JSON","stringify","result","alert","order_id","formatDate","dateString","toLocaleDateString","weekday","year","month","day","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","reload","menuDate","today","isMenuExpired","setHours","history","back","addToCart","prevCart","existingItem","find","cartItem","map","removeFromCart","itemId","Math","max","filter","getCartQuantity","parseFloat","handleSubmitOrder","length","log","_c","$RefreshReg$"],"sources":["/Users/ashokdonepudi/Documents/CaterOnCloud/mycloudkitchen-frontend/src/pages/MenuOrderForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Plus, Minus, ShoppingCart, Calendar, Clock, User, Phone, MapPin, CreditCard, Package, Utensils, AlertCircle, Loader } from 'lucide-react';\n\nconst MenuOrderForm = ({ menuId }) => {\n  // State for menu data\n    const [menuData, setMenuData] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n  \n    const [cart, setCart] = useState([]);\n    const [customerInfo, setCustomerInfo] = useState({\n    name: '',\n    phone: '',\n    email: '',\n    address: '',\n    delivery_time: '',\n    special_instructions: ''\n    });\n    const [orderType, setOrderType] = useState('delivery');\n    const [showOrderSummary, setShowOrderSummary] = useState(false);\n    const [submitting, setSubmitting] = useState(false);\n\n  // Extract menu ID from URL if not provided as prop\n    const getMenuIdFromUrl = () => {\n    if (menuId) return menuId;\n    \n    // Extract from current URL: /order/M20250617\n    const path = window.location.pathname;\n    const matches = path.match(/\\/order\\/(.+)$/);\n    return matches ? matches[1] : null;\n    };\n\n    // Fetch menu data from API\n    const fetchMenuData = async (id) => {\n        try {\n        setLoading(true);\n        setError(null);\n        \n        // API call to fetch scheduled menu by ID\n        const response = await fetch(`/api/scheduled-menus/${id}`);\n        \n        if (!response.ok) {\n            throw new Error(`Menu not found (${response.status})`);\n        }\n        \n        const data = await response.json();\n        \n        // Transform the data to match expected structure\n        const transformedData = {\n            id: data.id || id,\n            name: data.menu_name || data.name,\n            menu_date: data.menu_date,\n            items: data.items || data.menu_items || []\n        };\n        \n        setMenuData(transformedData);\n        } catch (err) {\n        console.error('Error fetching menu:', err);\n        setError(err.message || 'Failed to load menu');\n        \n        // Fallback to mock data for demonstration\n        setMenuData({\n            id: id,\n            name: \"Saturday Special Menu\",\n            menu_date: \"2025-06-17\",\n            items: [\n            {\n                catalog_item_id: 2008,\n                item_name: \"Combo3\",\n                description: \"Only Starters - Mixed appetizer platter with samosas, spring rolls, and chutney\",\n                price: \"18.0\",\n                category: \"Combo Deals\",\n                is_combo: true,\n                combo_items: [\n                { item_name: \"Samosa\", quantity: 3 },\n                { item_name: \"Spring Roll\", quantity: 2 },\n                { item_name: \"Mint Chutney\", quantity: 1 }\n                ]\n            },\n            {\n                catalog_item_id: 2007,\n                item_name: \"Veg Combo\",\n                description: \"Starter and Biryani - Perfect vegetarian meal combo\",\n                price: \"12.0\",\n                category: \"Combo Deals\",\n                is_combo: true,\n                combo_items: [\n                { item_name: \"Veg Biryani\", quantity: 1 },\n                { item_name: \"Raita\", quantity: 1 },\n                { item_name: \"Papad\", quantity: 2 }\n                ]\n            },\n            {\n                catalog_item_id: 2009,\n                item_name: \"Chicken Biryani\",\n                description: \"Aromatic basmati rice with tender chicken pieces\",\n                price: \"8.0\",\n                category: \"Main Courses\",\n                is_combo: false,\n                combo_items: null\n            },\n            {\n                catalog_item_id: 2010,\n                item_name: \"Paneer Butter Masala\",\n                description: \"Rich and creamy paneer curry with butter naan\",\n                price: \"7.5\",\n                category: \"Main Courses\",\n                is_combo: false,\n                combo_items: null\n            },\n            {\n                catalog_item_id: 2011,\n                item_name: \"Samosa\",\n                description: \"Crispy triangular pastry with spiced potato filling\",\n                price: \"2.5\",\n                category: \"Appetizers\",\n                is_combo: false,\n                combo_items: null\n            }\n            ]\n        });\n        } finally {\n        setLoading(false);\n        }\n    };\n\n  // Load menu data on component mount\n    useEffect(() => {\n    const id = getMenuIdFromUrl();\n    if (id) {\n      fetchMenuData(id);\n    } else {\n      setError('Invalid menu ID');\n      setLoading(false);\n    }\n    }, [menuId]);\n\n  // Group items by category\n    const groupedItems = menuData ? menuData.items.reduce((groups, item) => {\n    const category = item.category || 'Other Items';\n    if (!groups[category]) {\n      groups[category] = [];\n    }\n    groups[category].push(item);\n    return groups;\n    }, {}) : {};\n\n\n\n    setSubmitting(true);\n    \n    try {\n        const orderData = {\n            menu_id: menuData.id,\n            menu_name: menuData.name,\n            menu_date: menuData.menu_date,\n            customer: customerInfo,\n            order_type: orderType,\n            items: cart,\n            totals: {\n            subtotal: subtotal.toFixed(2),\n            delivery_fee: deliveryFee.toFixed(2),\n            tax: tax.toFixed(2),\n            total: total.toFixed(2)\n            },\n            order_time: new Date().toISOString()\n        };\n      \n      // Submit order to API\n        const response = fetch('/api/orders', {\n            method: 'POST',\n            headers: {\n            'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(orderData)\n        });\n      \n        if (response.ok) {\n            const result =  response.json();\n            alert(`Order placed successfully! Order ID: ${result.order_id}`);\n        // Reset form\n            setCart([]);\n            setCustomerInfo({\n            name: '',\n            phone: '',\n            email: '',\n            address: '',\n            delivery_time: '',\n            special_instructions: ''\n            });\n        } else {\n            throw new Error('Failed to submit order');\n        }\n        } catch (error) {\n        console.error('Order submission error:', error);\n        alert('Failed to place order. Please try again.');\n        } finally {\n        setSubmitting(false);\n        }\n\n    const formatDate = (dateString) => {\n        return new Date(dateString).toLocaleDateString('en-GB', {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n        });\n    };\n\n    // Loading state\n    if (loading) {\n        return (\n        <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <Loader className=\"h-12 w-12 text-orange-600 mx-auto mb-4 animate-spin\" />\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">Loading Menu...</h2>\n          <p className=\"text-gray-600\">Please wait while we fetch the menu details.</p>\n        </div>\n      </div>\n    );\n    }\n\n  // Error state\n  if (error && !menuData) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center max-w-md mx-auto p-6\">\n          <AlertCircle className=\"h-16 w-16 text-red-500 mx-auto mb-4\" />\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">Menu Not Available</h2>\n          <p className=\"text-gray-600 mb-4\">{error}</p>\n          <button\n            onClick={() => window.location.reload()}\n            className=\"bg-orange-600 text-white px-4 py-2 rounded-lg hover:bg-orange-700\"\n          >\n            Try Again\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  // Check if menu is available for ordering (not past date)\n  const menuDate = new Date(menuData.menu_date);\n  const today = new Date();\n  const isMenuExpired = menuDate < today.setHours(0,0,0,0);\n\n  if (isMenuExpired) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center max-w-md mx-auto p-6\">\n          <Calendar className=\"h-16 w-16 text-gray-400 mx-auto mb-4\" />\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">Menu No Longer Available</h2>\n          <p className=\"text-gray-600 mb-4\">\n            This menu was for {formatDate(menuData.menu_date)} and is no longer available for ordering.\n          </p>\n          <button\n            onClick={() => window.history.back()}\n            className=\"bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700\"\n          >\n            Go Back\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  // Add item to cart\n    const addToCart = (item) => {\n        setCart(prevCart => {\n        const existingItem = prevCart.find(cartItem => cartItem.catalog_item_id === item.catalog_item_id);\n        if (existingItem) {\n            return prevCart.map(cartItem =>\n                cartItem.catalog_item_id === item.catalog_item_id\n            ? { ...cartItem, quantity: cartItem.quantity + 1 }\n            : cartItem\n        );\n        } else {\n        return [...prevCart, { ...item, quantity: 1 }];\n        }\n        });\n    };\n\n  // Remove item from cart\n    const removeFromCart = (itemId) => {\n        setCart(prevCart => {\n        return prevCart.map(cartItem =>\n        cartItem.catalog_item_id === itemId\n          ? { ...cartItem, quantity: Math.max(0, cartItem.quantity - 1) }\n          : cartItem\n      ).filter(cartItem => cartItem.quantity > 0);\n        });\n    };\n\n  // Get item quantity in cart\n  const getCartQuantity = (itemId) => {\n    const cartItem = cart.find(item => item.catalog_item_id === itemId);\n    return cartItem ? cartItem.quantity : 0;\n    };\n\n  // Calculate totals\n  const subtotal = cart.reduce((total, item) => total + (parseFloat(item.price) * item.quantity), 0);\n  const deliveryFee = orderType === 'delivery' ? 2.50 : 0;\n  const tax = subtotal * 0.1; // 10% tax\n  const total = subtotal + deliveryFee + tax;\n\n  // Handle form submission\n  const handleSubmitOrder = async () => {\n    if (cart.length === 0) {\n      alert('Please add items to your cart before placing an order.');\n      return;\n    }\n    \n    if (!customerInfo.name || !customerInfo.phone) {\n      alert('Please fill in required fields (Name and Phone).');\n      return;\n    }\n    \n    if (orderType === 'delivery' && !customerInfo.address) {\n      alert('Please provide a delivery address.');\n      return;\n    }\n    \n    const orderData = {\n      menu_name: menuData.name,\n      menu_date: menuData.menu_date,\n      customer: customerInfo,\n      order_type: orderType,\n      items: cart,\n      totals: {\n        subtotal: subtotal.toFixed(2),\n        delivery_fee: deliveryFee.toFixed(2),\n        tax: tax.toFixed(2),\n        total: total.toFixed(2),\n    }\n    }   \n    \n    console.log('Order submitted:', orderData);\n    alert('Order placed successfully!');\n\n    };\n    \n\n};\nexport default MenuOrderForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}