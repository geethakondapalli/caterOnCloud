{"ast":null,"code":"var _jsxFileName = \"/Users/ashokdonepudi/Documents/CaterOnCloud/mycloudkitchen-frontend/src/pages/StripeCardPayment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { paymentService } from '../services/payments';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StripeCardPayment = ({\n  amount,\n  orderData,\n  onPaymentSuccess,\n  onCancel\n}) => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handlePayment = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      // Call your backend to create the PaymentIntent\n      const paymentIntent = await paymentService.createPaymentIntent(orderData.orderId); // should return client_secret\n      const cardElement = elements.getElement(CardElement);\n      const result = await stripe.confirmCardPayment(paymentIntent.client_secret, {\n        payment_method: {\n          card: cardElement,\n          billing_details: {\n            name: \"Biller Name\",\n            email: \"biller@example.com\",\n            phone: \"1234567890\"\n          }\n        }\n      });\n      if (result.error) {\n        setError(result.error.message);\n      } else if (result.paymentIntent.status === 'succeeded') {\n        onPaymentSuccess(result.paymentIntent);\n      }\n    } catch (err) {\n      console.error(err);\n      setError('Something went wrong during payment.');\n    }\n    setLoading(false);\n    {/* Payment Modal Overlay */}\n    {\n      showPaymentModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg max-w-md w-full max-h-[90vh] overflow-y-auto\",\n          children: /*#__PURE__*/_jsxDEV(Elements, {\n            stripe: stripePromise,\n            children: /*#__PURE__*/_jsxDEV(StripeCardPayment, {\n              amount: getTotalPrice() * 100,\n              orderData: {\n                id: orderData.order_id,\n                total: getTotalPrice()\n              },\n              onPaymentSuccess: handlePaymentSuccess,\n              onCancel: handlePaymentCancel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-semibold mb-4\",\n      children: \"Enter Card Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border p-2 rounded mb-4\",\n      children: /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-600 mb-2\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onCancel,\n        className: \"px-4 py-2 bg-gray-300 rounded\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePayment,\n        disabled: !stripe || loading,\n        className: \"px-4 py-2 bg-green-600 text-white rounded\",\n        children: loading ? 'Processing...' : `Pay £${(amount / 100).toFixed(2)}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(StripeCardPayment, \"OSD33JfIILZ1T7xA7ylz1NjOWy4=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = StripeCardPayment;\nexport default StripeCardPayment;\nvar _c;\n$RefreshReg$(_c, \"StripeCardPayment\");","map":{"version":3,"names":["React","useState","CardElement","useElements","useStripe","paymentService","jsxDEV","_jsxDEV","StripeCardPayment","amount","orderData","onPaymentSuccess","onCancel","_s","stripe","elements","loading","setLoading","error","setError","handlePayment","paymentIntent","createPaymentIntent","orderId","cardElement","getElement","result","confirmCardPayment","client_secret","payment_method","card","billing_details","name","email","phone","message","status","err","console","showPaymentModal","className","children","Elements","stripePromise","getTotalPrice","id","order_id","total","handlePaymentSuccess","handlePaymentCancel","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","toFixed","_c","$RefreshReg$"],"sources":["/Users/ashokdonepudi/Documents/CaterOnCloud/mycloudkitchen-frontend/src/pages/StripeCardPayment.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport { paymentService } from '../services/payments';\n\n\nconst StripeCardPayment = ({ amount, orderData, onPaymentSuccess, onCancel }) => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handlePayment = async () => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      // Call your backend to create the PaymentIntent\n      const paymentIntent = await paymentService.createPaymentIntent(orderData.orderId); // should return client_secret\n      const cardElement = elements.getElement(CardElement);\n      const result = await stripe.confirmCardPayment(paymentIntent.client_secret, {\n        payment_method: {\n          card: cardElement,\n          billing_details: {\n            name: \"Biller Name\",\n            email: \"biller@example.com\",\n            phone: \"1234567890\",\n          },\n        },\n      });\n\n      if (result.error) {\n        setError(result.error.message);\n      } else if (result.paymentIntent.status === 'succeeded') {\n        onPaymentSuccess(result.paymentIntent);\n      }\n    } catch (err) {\n      console.error(err);\n      setError('Something went wrong during payment.');\n    }\n\n    setLoading(false);\n\n    {/* Payment Modal Overlay */}\n    {showPaymentModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-white rounded-lg max-w-md w-full max-h-[90vh] overflow-y-auto\">\n          <Elements stripe={stripePromise}>\n            <StripeCardPayment\n              amount={getTotalPrice()*100}\n              orderData={{ \n                id: orderData.order_id,\n                total: getTotalPrice()\n              }}\n              onPaymentSuccess={handlePaymentSuccess}\n              onCancel={handlePaymentCancel}\n            />\n            </Elements>\n          </div>\n        </div>\n      )}\n  };\n\n  return (\n    <div className=\"p-4\">\n      <h3 className=\"text-lg font-semibold mb-4\">Enter Card Details</h3>\n      <div className=\"border p-2 rounded mb-4\">\n        <CardElement />\n      </div>\n      {error && <div className=\"text-red-600 mb-2\">{error}</div>}\n      <div className=\"flex justify-between\">\n        <button onClick={onCancel} className=\"px-4 py-2 bg-gray-300 rounded\">Cancel</button>\n        <button onClick={handlePayment} disabled={!stripe || loading} className=\"px-4 py-2 bg-green-600 text-white rounded\">\n          {loading ? 'Processing...' : `Pay £${(amount / 100).toFixed(2)}`}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default StripeCardPayment;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}