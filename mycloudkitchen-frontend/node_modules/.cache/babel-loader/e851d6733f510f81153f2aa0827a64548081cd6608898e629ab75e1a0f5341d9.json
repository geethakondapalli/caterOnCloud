{"ast":null,"code":"var _jsxFileName = \"/Users/ashokdonepudi/Documents/CaterOnCloud/mycloudkitchen-frontend/src/components/common/ConnectionTest.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { authService } from '../../services/auth';\nimport { AlertCircle, CheckCircle, Loader } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConnectionTest = () => {\n  _s();\n  const [status, setStatus] = useState('testing');\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    testConnection();\n  }, []);\n  const testConnection = async () => {\n    try {\n      setStatus('testing');\n      setMessage('Connecting to backend...');\n      const response = await authService.testConnection();\n      setStatus('success');\n      setMessage(`✅ Connected! Server status: ${response.status}`);\n    } catch (error) {\n      setStatus('error');\n      setMessage(`❌ Connection failed: ${error.message}`);\n    }\n  };\n  if (status === 'success') return null; // Hide when connected\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"connection-test\",\n    children: [status === 'testing' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status testing\",\n      children: [/*#__PURE__*/_jsxDEV(Loader, {\n        className: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this), status === 'success' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status success\",\n      children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n        className: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this), status === 'error' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status error\",\n      children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n        className: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(ConnectionTest, \"mQu1IOluJbKKAFh8268EzlxX3Hs=\");\n_c = ConnectionTest;\nexport default ConnectionTest;\nvar _c;\n$RefreshReg$(_c, \"ConnectionTest\");","map":{"version":3,"names":["React","useState","useEffect","authService","AlertCircle","CheckCircle","Loader","jsxDEV","_jsxDEV","ConnectionTest","_s","status","setStatus","message","setMessage","testConnection","response","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ashokdonepudi/Documents/CaterOnCloud/mycloudkitchen-frontend/src/components/common/ConnectionTest.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { authService } from '../../services/auth';\nimport { AlertCircle, CheckCircle, Loader } from 'lucide-react';\n\nconst ConnectionTest = () => {\n  const [status, setStatus] = useState('testing');\n  const [message, setMessage] = useState('');\n\n    useEffect(() => {\n        testConnection();\n    }, []);\n\n    const testConnection = async () => {\n        try {\n        setStatus('testing');\n        setMessage('Connecting to backend...');\n        \n        const response = await authService.testConnection();\n        setStatus('success');\n        setMessage(`✅ Connected! Server status: ${response.status}`);\n        } catch (error) {\n        setStatus('error');\n        setMessage(`❌ Connection failed: ${error.message}`);\n        }\n    };\n\n     if (status === 'success') return null; // Hide when connected\n\n    return (\n        <div className=\"connection-test\">\n            {status === 'testing' && (\n                <div className=\"status testing\">\n                    <Loader className=\"icon\" />\n                    <span>{message}</span>\n                </div>\n            )}\n            {status === 'success' && (\n                <div className=\"status success\">\n                    <CheckCircle className=\"icon\" />\n                    <span>{message}</span>\n                </div>\n            )}\n            {status === 'error' && (\n                <div className=\"status error\">\n                    <AlertCircle className=\"icon\" />\n                    <span>{message}</span>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default ConnectionTest;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}